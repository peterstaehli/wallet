require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '11.0'

# This is used to allow the CI build to work. The pod(s) are
# signed with the credentials / profile provided and xcodebuild
# is not happy with this. If you Pods are check in to SCM, and not
# updated by the CI build process then you may not need this.
post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['EXPANDED_CODE_SIGN_IDENTITY'] = ""
      config.build_settings['CODE_SIGNING_REQUIRED'] = "NO"
      config.build_settings['CODE_SIGNING_ALLOWED'] = "NO"
    end
  end
  react_native_post_install(installer)
  __apply_Xcode_12_5_M1_post_install_workaround(installer)
  fix_library_search_paths(installer)
end

target 'AriesBifold' do
  config = use_native_modules!

  permissions_path = '../node_modules/react-native-permissions/ios'

  pod 'Permission-Camera', :path => "#{permissions_path}/Camera"

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => true
  )

  target 'AriesBifoldTests' do
    inherit! :complete
    # Pods for testing
  end

  def fix_library_search_paths(installer)
    def fix_config(config)
      lib_search_paths = config.build_settings["LIBRARY_SEARCH_PATHS"]
      if lib_search_paths
        if lib_search_paths.include?("$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)") || lib_search_paths.include?("\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"")
          # $(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME) causes problem with Xcode 12.5 + arm64 (Apple M1)
          # since the libraries there are only built for x86_64 and i386.
          lib_search_paths.delete("$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)")
          lib_search_paths.delete("\"$(TOOLCHAIN_DIR)/usr/lib/swift-5.0/$(PLATFORM_NAME)\"")
          if !(lib_search_paths.include?("$(SDKROOT)/usr/lib/swift") || lib_search_paths.include?("\"$(SDKROOT)/usr/lib/swift\""))
            # however, $(SDKROOT)/usr/lib/swift is required, at least if user is not running CocoaPods 1.11
            lib_search_paths.insert(0, "$(SDKROOT)/usr/lib/swift")
          end
        end
      end
    end
  
    projects = installer.aggregate_targets
      .map{ |t| t.user_project }
      .uniq{ |p| p.path }
      .push(installer.pods_project)
  
    projects.each do |project|
      project.build_configurations.each do |config|
        fix_config(config)
      end
      project.native_targets.each do |target|
        target.build_configurations.each do |config|
          fix_config(config)
        end
      end
      project.save()
    end
  end 
end